pipeline{
   agent any
   stages{
      stage('git_communication'){
         steps{
            git branch:"main",
               url:"https://github.com/dummyrepos/SampleWeb.git"
         }
      }
      stage('build and analysisi'){
         steps{
            withSonarQubeEnv(credentialsId: 'SONARCLOUD', installationName: 'SONAR_CLOUD'){
            sh "/var/lib/jenkins/.dotnet/tools/dotnet-sonarscanner begin /k:siadevops_dotnet-samaple /o:siadevops"
            sh "dotnet build SampleMVC.sln --no-incremental"
            sh 'dotnet test SampleMVC.sln'
            sh 'dotnet publish -c Release StudentsWeb/StudentsWeb.csproj -o published/'
            sh '/var/lib/jenkins/.dotnet/tools/dotnet-sonarscanner end' 
            }
         }

      }
      stage("Quality Gate") {
            steps {
                timeout(time: 1, unit: 'HOURS') {
                    // Parameter indicates whether to set pipeline to UNSTABLE if Quality Gate fails
                    // true = set pipeline to UNSTABLE, false = don't
                    waitForQualityGate abortPipeline: true
                }
            }
        }
   }
}